{"version":3,"sources":["todomain.png","components/todoSimple.js","store/constants/constant.js","components/TodowithRedux.js","store/actions/action.js","History.js","mainApplication.js","store/reducer/Todoreducer.js","store/reducer/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TodoSimple","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","UpdateItem","id","_tasks","state","tasks","updatedtask","filter","el","map","index","task","updatestring","setState","open","DeleteItem","searchstring","userTask","currentItem","updated_id","handleChange","bind","assertThisInitialized","handleChangeTask","handleAdd","ClosePopup","OpenPopup","handleUpdateString","udpateID","refs","value","length","push","e","target","search","_this2","trim","toLowerCase","user","match","columns","Header","width","accessor","react_default","a","createElement","className","onClick","reactjs_popup_es","closeOnDocumentClick","onClose","type","onChange","ref","placeholder","es","data","defaultPageSize","Component","ActionsTypes","UPDATETASKS","TodowithRedux","changeStateToReducer","connect","todoReducer","dispatch","updatetasks","payload","createBrowserHistory","imagestyle","marginLeft","RootComponent","src","todoimage","alt","style","Home","Todoapp","todoSimple","TodoRedux","components_TodowithRedux","TodoApp","Router","history","Route","render","_ref","location","Fragment","lib_default","onSelect","selected","to","pathname","Toggle","Nav","defaultSelected","lib","eventKey","fontSize","path","exact","component","mainApplication_RootComponent","mainApplication_Home","mainApplication_Todoapp","mainApplication_TodoRedux","INITIAL_STATE","combineReducers","states","arguments","undefined","action","objectSpread","store","createStore","allReducers","applyMiddleware","thunk","App","react_redux_es","mainApplication","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b5c389a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/todomain.26eda2bb.png\";","import React, { Component } from \"react\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ReactTable from 'react-table';\r\nimport Popup from \"reactjs-popup\";\r\nimport \"react-table/react-table.css\";\r\nimport './css/todostyle.css';\r\n\r\n\r\n\r\nclass TodoSimple extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [],\r\n      searchstring: \"\",\r\n      updatestring:\"\",\r\n      userTask: \"\",      \r\n      currentItem: { id: 0, task: \"\" },\r\n      updated_id: 0,\r\n      open: false    \r\n    };\r\n    this.handleChange = this.handleChange.bind(this);    \r\n    this.handleChangeTask = this.handleChangeTask.bind(this);\r\n    this.handleAdd = this.handleAdd.bind(this);    \r\n    this.UpdateItem = this.UpdateItem.bind(this);\r\n    this.DeleteItem = this.DeleteItem.bind(this);\r\n    this.ClosePopup = this.ClosePopup.bind(this);\r\n    this.OpenPopup = this.OpenPopup.bind(this);\r\n    this.handleUpdateString = this.handleUpdateString.bind(this);\r\n  }\r\n  \r\n  UpdateItem = (id)=>{    \r\n    let _tasks = this.state.tasks;\r\n    let updatedtask = _tasks.filter((el) => {                \r\n      return el.id === id\r\n    })        \r\n    _tasks.map((el,index)=> {\r\n      if (el.id === updatedtask[0].id) {                \r\n        return _tasks[index].task = this.state.updatestring\r\n      }else{                \r\n        return _tasks\r\n      }\r\n    })  \r\n    \r\n    this.setState({\r\n     tasks: _tasks,      \r\n     open:false,\r\n     updatestring:''\r\n    })\r\n  }\r\n  OpenPopup(udpateID){\r\n    this.setState({ \r\n      open: true,\r\n      updated_id: udpateID\r\n    })\r\n  }\r\n  ClosePopup () {\r\n    this.setState({ open: false })\r\n  }\r\n  DeleteItem = (id) =>{    \r\n    let _tasks = this.state.tasks;\r\n    _tasks = _tasks.filter((el) => {                \r\n        return el.id !== id\r\n    })\r\n    this.setState({\r\n        tasks: _tasks\r\n    })\r\n  }  \r\n  handleAdd() {\r\n    let tasks = this.state.tasks;    \r\n    let task = this.refs.task.value;\r\n    let currentItem = this.state.currentItem;\r\n    var _id;\r\n    if (tasks.length > 0 ) {\r\n        _id = tasks[tasks.length-1].id + 1 \r\n\r\n    }else{\r\n        _id = currentItem.id + 1 \r\n    }    \r\n    currentItem = { id: _id, task: task };\r\n    tasks.push(currentItem);\r\n\r\n    this.setState({\r\n      tasks: tasks,\r\n      userTask: \"\"\r\n    });\r\n  }  \r\n  handleUpdateString(e) {\r\n    this.setState({\r\n      updatestring: e.target.value\r\n    });\r\n  }\r\n  handleChangeTask() {\r\n    this.setState({\r\n      userTask: this.refs.task.value\r\n    });\r\n  }\r\n  handleChange() {\r\n    this.setState({\r\n      searchstring: this.refs.search.value\r\n    });\r\n  }\r\n  render() {\r\n    let _tasks = this.state.tasks;\r\n    let search = this.state.searchstring.trim().toLowerCase();\r\n\r\n    if (search.length > 0) {\r\n      _tasks = _tasks.filter(function(user) {\r\n        return user.task.toLowerCase().match(search);\r\n      });\r\n    }\r\n    const columns = [{\r\n        Header: 'ID',\r\n        width:50,        \r\n        accessor: 'id' // String-based value accessors!\r\n        \r\n      },  {\r\n        id: 'task', // Required because our accessor is not a string\r\n        Header: 'User Task', \r\n        // width: 100,              \r\n        accessor: 'task'// Custom value accessors!\r\n      },{\r\n        id: 'action',         \r\n        Header: 'User Actions',    \r\n        width:200,           \r\n        accessor: (e)=>{                        \r\n            return(\r\n                <div>                                        \r\n                    <button className=\"btn btn-success\" onClick={()=>{this.OpenPopup(e.id)}}>Update</button>\r\n                    <button className=\"btn btn-danger\" onClick={()=>{this.DeleteItem(e.id)}}>Delete</button>\r\n                </div>\r\n            )\r\n        }\r\n      }\r\n    ]\r\n    return (\r\n      <div>  \r\n         <Popup open={this.state.open} closeOnDocumentClick onClose={this.ClosePopup}>\r\n          <div >                                                                       \r\n            <input type=\"text\" value={this.state.updatestring} onChange={this.handleUpdateString}/>\r\n            <button onClick={()=>{this.UpdateItem(this.state.updated_id)}}>Done</button>                        \r\n          </div>\r\n        </Popup>        \r\n        <input\r\n          type=\"text\"\r\n          value={this.state.userTask}\r\n          ref=\"task\"\r\n          className=\"inputwidth\"\r\n          onChange={this.handleChangeTask}\r\n          placeholder=\"Enter task\"\r\n        />{\" \"}\r\n        {\"\"}\r\n        <button className=\"btn btn-primary\" onClick={this.handleAdd}>\r\n          Add\r\n        </button>\r\n        <hr />\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.searchstring}\r\n            ref=\"search\"\r\n            className=\"searchwidth\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"Search User by Name\"\r\n          />\r\n          <i className=\"fa fas fa-search\" />\r\n        </div>\r\n        <hr/>\r\n        <div className=\"tablemargin\">\r\n            <ReactTable \r\n                data={_tasks} \r\n                columns={columns} \r\n                defaultPageSize={10}                \r\n            />\r\n        </div>       \r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TodoSimple;\r\n","\r\nconst ActionsTypes = {\r\n    UPDATETASKS:\"UPDATETASKS\"\r\n}\r\nexport default ActionsTypes;","import React, { Component } from \"react\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ReactTable from 'react-table';\r\nimport Popup from \"reactjs-popup\";\r\nimport \"react-table/react-table.css\";\r\nimport {connect} from 'react-redux';\r\nimport { changeState } from \"../store/actions/action\";\r\nimport './css/todostyle.css';\r\n\r\n\r\n\r\nclass TodowithRedux extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {      \r\n      searchstring: \"\",\r\n      updatestring:\"\",\r\n      userTask: \"\",      \r\n      currentItem: { id: 0, task: \"\" },\r\n      updated_id: 0,\r\n      open: false    \r\n    };\r\n    this.handleChange = this.handleChange.bind(this);    \r\n    this.handleChangeTask = this.handleChangeTask.bind(this);\r\n    this.handleAdd = this.handleAdd.bind(this);    \r\n    this.UpdateItem = this.UpdateItem.bind(this);\r\n    this.DeleteItem = this.DeleteItem.bind(this);\r\n    this.ClosePopup = this.ClosePopup.bind(this);\r\n    this.OpenPopup = this.OpenPopup.bind(this);\r\n    this.handleUpdateString = this.handleUpdateString.bind(this);\r\n  }\r\n  \r\n  UpdateItem = (id)=>{    \r\n    let _tasks = this.props.tasks;\r\n    let updatedtask = _tasks.filter((el) => {                \r\n      return el.id === id\r\n    })        \r\n    _tasks.map((el,index)=> {\r\n      if (el.id === updatedtask[0].id) {                \r\n        return _tasks[index].task = this.state.updatestring\r\n      }else{                \r\n        return _tasks\r\n      }\r\n    })    \r\n    \r\n    this.setState({\r\n     tasks: _tasks,      \r\n     open:false,\r\n     updatestring:''\r\n    }) \r\n  }\r\n  OpenPopup(udpateID){\r\n    this.setState({ \r\n      open: true,\r\n      updated_id: udpateID\r\n    })\r\n  }\r\n  ClosePopup () {\r\n    this.setState({ open: false })\r\n  }\r\n  DeleteItem = (id) =>{    \r\n    let _tasks = this.props.tasks;\r\n    _tasks = _tasks.filter((el) => {                \r\n        return el.id !== id\r\n    }) \r\n    this.props.changeStateToReducer(_tasks);\r\n  }  \r\n  handleAdd() {\r\n    let tasks = this.props.tasks;    \r\n    let task = this.refs.task.value;\r\n    let currentItem = this.state.currentItem;\r\n    var _id;\r\n    if (tasks.length > 0 ) {\r\n        _id = tasks[tasks.length-1].id + 1 \r\n\r\n    }else{\r\n        _id = currentItem.id + 1 \r\n    }    \r\n    currentItem = { id: _id, task: task };\r\n    tasks.push(currentItem);\r\n    \r\n    this.setState({      \r\n      userTask: \"\"\r\n    });\r\n    \r\n    this.props.changeStateToReducer(tasks);\r\n  }  \r\n  handleUpdateString(e) {\r\n    this.setState({\r\n      updatestring: e.target.value\r\n    });\r\n  }\r\n  handleChangeTask() {\r\n    this.setState({\r\n      userTask: this.refs.task.value\r\n    });\r\n  }\r\n  handleChange() {\r\n    this.setState({\r\n      searchstring: this.refs.search.value\r\n    });\r\n  }\r\n  render() {\r\n    let _tasks = this.props.tasks;\r\n    let search = this.state.searchstring.trim().toLowerCase();\r\n\r\n    if (search.length > 0) {\r\n      _tasks = _tasks.filter(function(user) {\r\n        return user.task.toLowerCase().match(search);\r\n      });\r\n    }\r\n    const columns = [{\r\n        Header: 'ID',\r\n        width:50,        \r\n        accessor: 'id' // String-based value accessors!\r\n        \r\n      },  {\r\n        id: 'task', // Required because our accessor is not a string\r\n        Header: 'User Task', \r\n        // width: 100,              \r\n        accessor: 'task'// Custom value accessors!\r\n      },{\r\n        id: 'action',         \r\n        Header: 'User Actions',    \r\n        width:200,           \r\n        accessor: (e)=>{                        \r\n            return(\r\n                <div>\r\n                    <button className=\"btn btn-success\" onClick={()=>{this.OpenPopup(e.id)}}>Update</button>                    \r\n                    <button className=\"btn btn-danger\" onClick={()=>{this.DeleteItem(e.id)}}>Delete</button>\r\n                </div>\r\n            )\r\n        }\r\n      }\r\n    ]\r\n    return (\r\n      <div>    \r\n        <Popup open={this.state.open} closeOnDocumentClick onClose={this.ClosePopup}>\r\n          <div >                                                                       \r\n            <input type=\"text\" value={this.state.updatestring} onChange={this.handleUpdateString}/>\r\n            <button onClick={()=>{this.UpdateItem(this.state.updated_id)}}>Done</button>                        \r\n          </div>\r\n        </Popup>    \r\n        <input\r\n          type=\"text\"\r\n          value={this.state.userTask}\r\n          ref=\"task\"\r\n          className=\"inputwidth\"\r\n          onChange={this.handleChangeTask}\r\n          placeholder=\"Enter task\"\r\n        />{\" \"}\r\n        {\"\"}\r\n        <button className=\"btn btn-primary\" onClick={this.handleAdd}>\r\n          Add\r\n        </button>\r\n        <hr />\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.searchstring}\r\n            ref=\"search\"\r\n            className=\"searchwidth\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"Search User by Name\"\r\n          />\r\n          <i className=\"fa fas fa-search\" />\r\n        </div>\r\n        <hr/>        \r\n        <div className=\"tablemargin\">\r\n            <ReactTable \r\n                data={_tasks} \r\n                columns={columns} \r\n                defaultPageSize={10}                \r\n            />\r\n        </div>       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return({\r\n        tasks: state.todoReducer.tasks\r\n    })\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return({\r\n        changeStateToReducer: (updatetasks)=>{\r\n            dispatch(changeState(updatetasks))\r\n        }\r\n    })\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TodowithRedux);\r\n","\r\nimport ActionsTypes from \"../constants/constant\";\r\n\r\nexport function changeState(tasks){\r\n    return dispatch => {\r\n        dispatch({type:ActionsTypes.UPDATETASKS, payload:tasks})\r\n    }\r\n    \r\n}","import createBrowserHistory from 'history/createBrowserHistory';\r\n\r\nexport default createBrowserHistory();","import React, { Component } from \"react\";\r\nimport SideNav, { NavItem, NavIcon, NavText } from \"@trendmicro/react-sidenav\";\r\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport todoimage from \"./todomain.png\";\r\nimport TodoSimple from \"./components/todoSimple\";\r\nimport TodowithRedux from \"./components/TodowithRedux\";\r\nimport history from \"./History.js\";\r\n\r\nimport { Router, Route } from \"react-router-dom\";\r\nconst imagestyle = {\r\n    marginLeft: \"5%\"\r\n}\r\nconst RootComponent = () => {\r\n    \r\n  return (\r\n    <div>\r\n      <h1>RootComponent</h1>\r\n      <hr />\r\n      <img src ={todoimage} alt=\"Mountain\" \r\n      width=\"94%\" \r\n      style={\r\n        imagestyle\r\n      }\r\n        />\r\n    </div>\r\n  );\r\n};\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <h1>Home Page</h1>\r\n      <hr />\r\n      <img src ={todoimage} alt=\"Mountain\" \r\n      width=\"94%\" \r\n      style={\r\n        imagestyle\r\n      }\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst Todoapp = () => {\r\n  return (\r\n    <div>\r\n      <h1>Todo App</h1>\r\n      <hr />\r\n      <TodoSimple />\r\n    </div>\r\n  );\r\n};\r\nconst TodoRedux = ()=>{\r\n  return (\r\n    <div>\r\n      <h1>Todo App With Redux</h1>\r\n      <hr />\r\n      <TodowithRedux />\r\n    </div>\r\n  );\r\n};\r\nclass TodoApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: []\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>        \r\n        <Router history={history}>\r\n          <Route\r\n            render={({ location, history }) => (\r\n              <React.Fragment>\r\n                <SideNav\r\n                  onSelect={selected => {\r\n                    const to = \"/\" + selected;                    \r\n                    \r\n                    if (location.pathname !== to) {\r\n                      history.push(to);\r\n                    }\r\n                  }}\r\n                >\r\n                  <SideNav.Toggle />\r\n                  <SideNav.Nav defaultSelected=\"home\">\r\n                    <NavItem eventKey=\"home\">\r\n                      <NavIcon>\r\n                        <i\r\n                          className=\"fa fa-fw fa-home\"\r\n                          style={{ fontSize: \"1.75em\" }}\r\n                        />\r\n                      </NavIcon>\r\n                      <NavText>Home</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"todoapp\">\r\n                      <NavIcon>\r\n                        <i\r\n                          className=\"fa fas fa-tasks\"\r\n                          style={{ fontSize: \"1.75em\" }}\r\n                        />\r\n                      </NavIcon>\r\n                      <NavText>Todo Simple App</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"todoapp_redux\">\r\n                      <NavIcon>\r\n                        <i\r\n                          className=\"fa fas fa-tasks\"\r\n                          style={{ fontSize: \"1.75em\" }}\r\n                        />\r\n                      </NavIcon>\r\n                      <NavText>Todo App with Redux</NavText>\r\n                    </NavItem>                    \r\n                    {/* <NavItem eventKey=\"delete\">\r\n                      <NavIcon>\r\n                        <i\r\n                          className=\"fa fas fa-tasks\"\r\n                          style={{ fontSize: \"1.75em\" }}\r\n                        />\r\n                      </NavIcon>\r\n                      <NavText>Delete Item</NavText>\r\n                    </NavItem> */}\r\n                    \r\n                  </SideNav.Nav>\r\n                </SideNav>\r\n                <main>\r\n                  <Route\r\n                    path=\"/\"\r\n                    exact\r\n                    component={props => <RootComponent />}\r\n                  />\r\n                  <Route path=\"/home\" component={props => <Home />} />\r\n                  <Route path=\"/todoapp\" component={props => <Todoapp />} />\r\n                  <Route path=\"/todoapp_redux\" component={props => <TodoRedux />} />                  \r\n                </main>\r\n              </React.Fragment>\r\n            )}\r\n          />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TodoApp;\r\n","import ActionsTypes from \"../constants/constant\";\r\n\r\nconst INITIAL_STATE = {\r\n    tasks: []\r\n}\r\n\r\nexport default (states = INITIAL_STATE, action)=> {\r\n    switch(action.type){\r\n        case ActionsTypes.UPDATETASKS:\r\n            return({\r\n                ...states,\r\n                tasks:action.payload\r\n            })\r\n        default:\r\n            return states\r\n    }\r\n}","import  {combineReducers}  from 'redux';\r\nimport todoreducer from './Todoreducer';\r\n\r\nexport default combineReducers({\r\n    todoReducer: todoreducer    \r\n});","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport allReducers from './reducer';\r\n\r\nconst store = createStore( \r\n    allReducers,\r\n    {},\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport MainApplication from './mainApplication';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div className=\"App\">\r\n          <MainApplication />\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}